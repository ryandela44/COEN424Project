# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Item(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, item_id: str=None, product_name: str=None, unit_price: float=None):  # noqa: E501
        """Item - a model defined in Swagger

        :param item_id: The item_id of this Item.  # noqa: E501
        :type item_id: str
        :param product_name: The product_name of this Item.  # noqa: E501
        :type product_name: str
        :param unit_price: The unit_price of this Item.  # noqa: E501
        :type unit_price: float
        """
        self.swagger_types = {
            'item_id': str,
            'product_name': str,
            'unit_price': float
        }

        self.attribute_map = {
            'item_id': 'ItemID',
            'product_name': 'ProductName',
            'unit_price': 'UnitPrice'
        }
        self._item_id = item_id
        self._product_name = product_name
        self._unit_price = unit_price

    @classmethod
    def from_dict(cls, dikt) -> 'Item':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Item of this Item.  # noqa: E501
        :rtype: Item
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_id(self) -> str:
        """Gets the item_id of this Item.


        :return: The item_id of this Item.
        :rtype: str
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id: str):
        """Sets the item_id of this Item.


        :param item_id: The item_id of this Item.
        :type item_id: str
        """

        self._item_id = item_id

    @property
    def product_name(self) -> str:
        """Gets the product_name of this Item.


        :return: The product_name of this Item.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name: str):
        """Sets the product_name of this Item.


        :param product_name: The product_name of this Item.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def unit_price(self) -> float:
        """Gets the unit_price of this Item.


        :return: The unit_price of this Item.
        :rtype: float
        """
        return self._unit_price

    @unit_price.setter
    def unit_price(self, unit_price: float):
        """Sets the unit_price of this Item.


        :param unit_price: The unit_price of this Item.
        :type unit_price: float
        """

        self._unit_price = unit_price
